{"version":3,"sources":["../node_modules/regenerate-unicode-properties sync /^/.//.*/.js$","presentation.js","registerServiceWorker.js","index.js"],"names":["map","./Binary_Property/ASCII.js","./Binary_Property/ASCII_Hex_Digit.js","./Binary_Property/Alphabetic.js","./Binary_Property/Any.js","./Binary_Property/Assigned.js","./Binary_Property/Bidi_Control.js","./Binary_Property/Bidi_Mirrored.js","./Binary_Property/Case_Ignorable.js","./Binary_Property/Cased.js","./Binary_Property/Changes_When_Casefolded.js","./Binary_Property/Changes_When_Casemapped.js","./Binary_Property/Changes_When_Lowercased.js","./Binary_Property/Changes_When_NFKC_Casefolded.js","./Binary_Property/Changes_When_Titlecased.js","./Binary_Property/Changes_When_Uppercased.js","./Binary_Property/Dash.js","./Binary_Property/Default_Ignorable_Code_Point.js","./Binary_Property/Deprecated.js","./Binary_Property/Diacritic.js","./Binary_Property/Emoji.js","./Binary_Property/Emoji_Component.js","./Binary_Property/Emoji_Modifier.js","./Binary_Property/Emoji_Modifier_Base.js","./Binary_Property/Emoji_Presentation.js","./Binary_Property/Extended_Pictographic.js","./Binary_Property/Extender.js","./Binary_Property/Grapheme_Base.js","./Binary_Property/Grapheme_Extend.js","./Binary_Property/Hex_Digit.js","./Binary_Property/IDS_Binary_Operator.js","./Binary_Property/IDS_Trinary_Operator.js","./Binary_Property/ID_Continue.js","./Binary_Property/ID_Start.js","./Binary_Property/Ideographic.js","./Binary_Property/Join_Control.js","./Binary_Property/Logical_Order_Exception.js","./Binary_Property/Lowercase.js","./Binary_Property/Math.js","./Binary_Property/Noncharacter_Code_Point.js","./Binary_Property/Pattern_Syntax.js","./Binary_Property/Pattern_White_Space.js","./Binary_Property/Quotation_Mark.js","./Binary_Property/Radical.js","./Binary_Property/Regional_Indicator.js","./Binary_Property/Sentence_Terminal.js","./Binary_Property/Soft_Dotted.js","./Binary_Property/Terminal_Punctuation.js","./Binary_Property/Unified_Ideograph.js","./Binary_Property/Uppercase.js","./Binary_Property/Variation_Selector.js","./Binary_Property/White_Space.js","./Binary_Property/XID_Continue.js","./Binary_Property/XID_Start.js","./General_Category/Cased_Letter.js","./General_Category/Close_Punctuation.js","./General_Category/Connector_Punctuation.js","./General_Category/Control.js","./General_Category/Currency_Symbol.js","./General_Category/Dash_Punctuation.js","./General_Category/Decimal_Number.js","./General_Category/Enclosing_Mark.js","./General_Category/Final_Punctuation.js","./General_Category/Format.js","./General_Category/Initial_Punctuation.js","./General_Category/Letter.js","./General_Category/Letter_Number.js","./General_Category/Line_Separator.js","./General_Category/Lowercase_Letter.js","./General_Category/Mark.js","./General_Category/Math_Symbol.js","./General_Category/Modifier_Letter.js","./General_Category/Modifier_Symbol.js","./General_Category/Nonspacing_Mark.js","./General_Category/Number.js","./General_Category/Open_Punctuation.js","./General_Category/Other.js","./General_Category/Other_Letter.js","./General_Category/Other_Number.js","./General_Category/Other_Punctuation.js","./General_Category/Other_Symbol.js","./General_Category/Paragraph_Separator.js","./General_Category/Private_Use.js","./General_Category/Punctuation.js","./General_Category/Separator.js","./General_Category/Space_Separator.js","./General_Category/Spacing_Mark.js","./General_Category/Surrogate.js","./General_Category/Symbol.js","./General_Category/Titlecase_Letter.js","./General_Category/Unassigned.js","./General_Category/Uppercase_Letter.js","./Script/Adlam.js","./Script/Ahom.js","./Script/Anatolian_Hieroglyphs.js","./Script/Arabic.js","./Script/Armenian.js","./Script/Avestan.js","./Script/Balinese.js","./Script/Bamum.js","./Script/Bassa_Vah.js","./Script/Batak.js","./Script/Bengali.js","./Script/Bhaiksuki.js","./Script/Bopomofo.js","./Script/Brahmi.js","./Script/Braille.js","./Script/Buginese.js","./Script/Buhid.js","./Script/Canadian_Aboriginal.js","./Script/Carian.js","./Script/Caucasian_Albanian.js","./Script/Chakma.js","./Script/Cham.js","./Script/Cherokee.js","./Script/Common.js","./Script/Coptic.js","./Script/Cuneiform.js","./Script/Cypriot.js","./Script/Cyrillic.js","./Script/Deseret.js","./Script/Devanagari.js","./Script/Dogra.js","./Script/Duployan.js","./Script/Egyptian_Hieroglyphs.js","./Script/Elbasan.js","./Script/Ethiopic.js","./Script/Georgian.js","./Script/Glagolitic.js","./Script/Gothic.js","./Script/Grantha.js","./Script/Greek.js","./Script/Gujarati.js","./Script/Gunjala_Gondi.js","./Script/Gurmukhi.js","./Script/Han.js","./Script/Hangul.js","./Script/Hanifi_Rohingya.js","./Script/Hanunoo.js","./Script/Hatran.js","./Script/Hebrew.js","./Script/Hiragana.js","./Script/Imperial_Aramaic.js","./Script/Inherited.js","./Script/Inscriptional_Pahlavi.js","./Script/Inscriptional_Parthian.js","./Script/Javanese.js","./Script/Kaithi.js","./Script/Kannada.js","./Script/Katakana.js","./Script/Kayah_Li.js","./Script/Kharoshthi.js","./Script/Khmer.js","./Script/Khojki.js","./Script/Khudawadi.js","./Script/Lao.js","./Script/Latin.js","./Script/Lepcha.js","./Script/Limbu.js","./Script/Linear_A.js","./Script/Linear_B.js","./Script/Lisu.js","./Script/Lycian.js","./Script/Lydian.js","./Script/Mahajani.js","./Script/Makasar.js","./Script/Malayalam.js","./Script/Mandaic.js","./Script/Manichaean.js","./Script/Marchen.js","./Script/Masaram_Gondi.js","./Script/Medefaidrin.js","./Script/Meetei_Mayek.js","./Script/Mende_Kikakui.js","./Script/Meroitic_Cursive.js","./Script/Meroitic_Hieroglyphs.js","./Script/Miao.js","./Script/Modi.js","./Script/Mongolian.js","./Script/Mro.js","./Script/Multani.js","./Script/Myanmar.js","./Script/Nabataean.js","./Script/New_Tai_Lue.js","./Script/Newa.js","./Script/Nko.js","./Script/Nushu.js","./Script/Ogham.js","./Script/Ol_Chiki.js","./Script/Old_Hungarian.js","./Script/Old_Italic.js","./Script/Old_North_Arabian.js","./Script/Old_Permic.js","./Script/Old_Persian.js","./Script/Old_Sogdian.js","./Script/Old_South_Arabian.js","./Script/Old_Turkic.js","./Script/Oriya.js","./Script/Osage.js","./Script/Osmanya.js","./Script/Pahawh_Hmong.js","./Script/Palmyrene.js","./Script/Pau_Cin_Hau.js","./Script/Phags_Pa.js","./Script/Phoenician.js","./Script/Psalter_Pahlavi.js","./Script/Rejang.js","./Script/Runic.js","./Script/Samaritan.js","./Script/Saurashtra.js","./Script/Sharada.js","./Script/Shavian.js","./Script/Siddham.js","./Script/SignWriting.js","./Script/Sinhala.js","./Script/Sogdian.js","./Script/Sora_Sompeng.js","./Script/Soyombo.js","./Script/Sundanese.js","./Script/Syloti_Nagri.js","./Script/Syriac.js","./Script/Tagalog.js","./Script/Tagbanwa.js","./Script/Tai_Le.js","./Script/Tai_Tham.js","./Script/Tai_Viet.js","./Script/Takri.js","./Script/Tamil.js","./Script/Tangut.js","./Script/Telugu.js","./Script/Thaana.js","./Script/Thai.js","./Script/Tibetan.js","./Script/Tifinagh.js","./Script/Tirhuta.js","./Script/Ugaritic.js","./Script/Vai.js","./Script/Warang_Citi.js","./Script/Yi.js","./Script/Zanabazar_Square.js","./Script_Extensions/Adlam.js","./Script_Extensions/Ahom.js","./Script_Extensions/Anatolian_Hieroglyphs.js","./Script_Extensions/Arabic.js","./Script_Extensions/Armenian.js","./Script_Extensions/Avestan.js","./Script_Extensions/Balinese.js","./Script_Extensions/Bamum.js","./Script_Extensions/Bassa_Vah.js","./Script_Extensions/Batak.js","./Script_Extensions/Bengali.js","./Script_Extensions/Bhaiksuki.js","./Script_Extensions/Bopomofo.js","./Script_Extensions/Brahmi.js","./Script_Extensions/Braille.js","./Script_Extensions/Buginese.js","./Script_Extensions/Buhid.js","./Script_Extensions/Canadian_Aboriginal.js","./Script_Extensions/Carian.js","./Script_Extensions/Caucasian_Albanian.js","./Script_Extensions/Chakma.js","./Script_Extensions/Cham.js","./Script_Extensions/Cherokee.js","./Script_Extensions/Common.js","./Script_Extensions/Coptic.js","./Script_Extensions/Cuneiform.js","./Script_Extensions/Cypriot.js","./Script_Extensions/Cyrillic.js","./Script_Extensions/Deseret.js","./Script_Extensions/Devanagari.js","./Script_Extensions/Dogra.js","./Script_Extensions/Duployan.js","./Script_Extensions/Egyptian_Hieroglyphs.js","./Script_Extensions/Elbasan.js","./Script_Extensions/Ethiopic.js","./Script_Extensions/Georgian.js","./Script_Extensions/Glagolitic.js","./Script_Extensions/Gothic.js","./Script_Extensions/Grantha.js","./Script_Extensions/Greek.js","./Script_Extensions/Gujarati.js","./Script_Extensions/Gunjala_Gondi.js","./Script_Extensions/Gurmukhi.js","./Script_Extensions/Han.js","./Script_Extensions/Hangul.js","./Script_Extensions/Hanifi_Rohingya.js","./Script_Extensions/Hanunoo.js","./Script_Extensions/Hatran.js","./Script_Extensions/Hebrew.js","./Script_Extensions/Hiragana.js","./Script_Extensions/Imperial_Aramaic.js","./Script_Extensions/Inherited.js","./Script_Extensions/Inscriptional_Pahlavi.js","./Script_Extensions/Inscriptional_Parthian.js","./Script_Extensions/Javanese.js","./Script_Extensions/Kaithi.js","./Script_Extensions/Kannada.js","./Script_Extensions/Katakana.js","./Script_Extensions/Kayah_Li.js","./Script_Extensions/Kharoshthi.js","./Script_Extensions/Khmer.js","./Script_Extensions/Khojki.js","./Script_Extensions/Khudawadi.js","./Script_Extensions/Lao.js","./Script_Extensions/Latin.js","./Script_Extensions/Lepcha.js","./Script_Extensions/Limbu.js","./Script_Extensions/Linear_A.js","./Script_Extensions/Linear_B.js","./Script_Extensions/Lisu.js","./Script_Extensions/Lycian.js","./Script_Extensions/Lydian.js","./Script_Extensions/Mahajani.js","./Script_Extensions/Makasar.js","./Script_Extensions/Malayalam.js","./Script_Extensions/Mandaic.js","./Script_Extensions/Manichaean.js","./Script_Extensions/Marchen.js","./Script_Extensions/Masaram_Gondi.js","./Script_Extensions/Medefaidrin.js","./Script_Extensions/Meetei_Mayek.js","./Script_Extensions/Mende_Kikakui.js","./Script_Extensions/Meroitic_Cursive.js","./Script_Extensions/Meroitic_Hieroglyphs.js","./Script_Extensions/Miao.js","./Script_Extensions/Modi.js","./Script_Extensions/Mongolian.js","./Script_Extensions/Mro.js","./Script_Extensions/Multani.js","./Script_Extensions/Myanmar.js","./Script_Extensions/Nabataean.js","./Script_Extensions/New_Tai_Lue.js","./Script_Extensions/Newa.js","./Script_Extensions/Nko.js","./Script_Extensions/Nushu.js","./Script_Extensions/Ogham.js","./Script_Extensions/Ol_Chiki.js","./Script_Extensions/Old_Hungarian.js","./Script_Extensions/Old_Italic.js","./Script_Extensions/Old_North_Arabian.js","./Script_Extensions/Old_Permic.js","./Script_Extensions/Old_Persian.js","./Script_Extensions/Old_Sogdian.js","./Script_Extensions/Old_South_Arabian.js","./Script_Extensions/Old_Turkic.js","./Script_Extensions/Oriya.js","./Script_Extensions/Osage.js","./Script_Extensions/Osmanya.js","./Script_Extensions/Pahawh_Hmong.js","./Script_Extensions/Palmyrene.js","./Script_Extensions/Pau_Cin_Hau.js","./Script_Extensions/Phags_Pa.js","./Script_Extensions/Phoenician.js","./Script_Extensions/Psalter_Pahlavi.js","./Script_Extensions/Rejang.js","./Script_Extensions/Runic.js","./Script_Extensions/Samaritan.js","./Script_Extensions/Saurashtra.js","./Script_Extensions/Sharada.js","./Script_Extensions/Shavian.js","./Script_Extensions/Siddham.js","./Script_Extensions/SignWriting.js","./Script_Extensions/Sinhala.js","./Script_Extensions/Sogdian.js","./Script_Extensions/Sora_Sompeng.js","./Script_Extensions/Soyombo.js","./Script_Extensions/Sundanese.js","./Script_Extensions/Syloti_Nagri.js","./Script_Extensions/Syriac.js","./Script_Extensions/Tagalog.js","./Script_Extensions/Tagbanwa.js","./Script_Extensions/Tai_Le.js","./Script_Extensions/Tai_Tham.js","./Script_Extensions/Tai_Viet.js","./Script_Extensions/Takri.js","./Script_Extensions/Tamil.js","./Script_Extensions/Tangut.js","./Script_Extensions/Telugu.js","./Script_Extensions/Thaana.js","./Script_Extensions/Thai.js","./Script_Extensions/Tibetan.js","./Script_Extensions/Tifinagh.js","./Script_Extensions/Tirhuta.js","./Script_Extensions/Ugaritic.js","./Script_Extensions/Vai.js","./Script_Extensions/Warang_Citi.js","./Script_Extensions/Yi.js","./Script_Extensions/Zanabazar_Square.js","./index.js","./unicode-version.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","require","theme","createTheme","primary","secondary","tertiary","quartenary","H1","props","react_default","a","createElement","heading","assign","size","caps","margin","textColor","H2","Presentation","notes","slide","bgColor","components_text","textSize","src","alt","className","deck","transition","transitionDuration","this","renderIntroOutro","components_notes","presentation_H1","presentation_H2","code_pane","lang","source","appear","style","color","height","list","list_item","table","table_header","table_row","table_header_item","s","type","table_body","table_item","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","presentation_Presentation","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.26b4b5b8.chunk.js","sourcesContent":["var map = {\n\t\"./Binary_Property/ASCII.js\": 435,\n\t\"./Binary_Property/ASCII_Hex_Digit.js\": 436,\n\t\"./Binary_Property/Alphabetic.js\": 437,\n\t\"./Binary_Property/Any.js\": 438,\n\t\"./Binary_Property/Assigned.js\": 439,\n\t\"./Binary_Property/Bidi_Control.js\": 440,\n\t\"./Binary_Property/Bidi_Mirrored.js\": 441,\n\t\"./Binary_Property/Case_Ignorable.js\": 442,\n\t\"./Binary_Property/Cased.js\": 443,\n\t\"./Binary_Property/Changes_When_Casefolded.js\": 444,\n\t\"./Binary_Property/Changes_When_Casemapped.js\": 445,\n\t\"./Binary_Property/Changes_When_Lowercased.js\": 446,\n\t\"./Binary_Property/Changes_When_NFKC_Casefolded.js\": 447,\n\t\"./Binary_Property/Changes_When_Titlecased.js\": 448,\n\t\"./Binary_Property/Changes_When_Uppercased.js\": 449,\n\t\"./Binary_Property/Dash.js\": 450,\n\t\"./Binary_Property/Default_Ignorable_Code_Point.js\": 451,\n\t\"./Binary_Property/Deprecated.js\": 452,\n\t\"./Binary_Property/Diacritic.js\": 453,\n\t\"./Binary_Property/Emoji.js\": 454,\n\t\"./Binary_Property/Emoji_Component.js\": 455,\n\t\"./Binary_Property/Emoji_Modifier.js\": 456,\n\t\"./Binary_Property/Emoji_Modifier_Base.js\": 457,\n\t\"./Binary_Property/Emoji_Presentation.js\": 458,\n\t\"./Binary_Property/Extended_Pictographic.js\": 459,\n\t\"./Binary_Property/Extender.js\": 460,\n\t\"./Binary_Property/Grapheme_Base.js\": 461,\n\t\"./Binary_Property/Grapheme_Extend.js\": 462,\n\t\"./Binary_Property/Hex_Digit.js\": 463,\n\t\"./Binary_Property/IDS_Binary_Operator.js\": 464,\n\t\"./Binary_Property/IDS_Trinary_Operator.js\": 465,\n\t\"./Binary_Property/ID_Continue.js\": 466,\n\t\"./Binary_Property/ID_Start.js\": 467,\n\t\"./Binary_Property/Ideographic.js\": 468,\n\t\"./Binary_Property/Join_Control.js\": 469,\n\t\"./Binary_Property/Logical_Order_Exception.js\": 470,\n\t\"./Binary_Property/Lowercase.js\": 471,\n\t\"./Binary_Property/Math.js\": 472,\n\t\"./Binary_Property/Noncharacter_Code_Point.js\": 473,\n\t\"./Binary_Property/Pattern_Syntax.js\": 474,\n\t\"./Binary_Property/Pattern_White_Space.js\": 475,\n\t\"./Binary_Property/Quotation_Mark.js\": 476,\n\t\"./Binary_Property/Radical.js\": 477,\n\t\"./Binary_Property/Regional_Indicator.js\": 478,\n\t\"./Binary_Property/Sentence_Terminal.js\": 479,\n\t\"./Binary_Property/Soft_Dotted.js\": 480,\n\t\"./Binary_Property/Terminal_Punctuation.js\": 481,\n\t\"./Binary_Property/Unified_Ideograph.js\": 482,\n\t\"./Binary_Property/Uppercase.js\": 483,\n\t\"./Binary_Property/Variation_Selector.js\": 484,\n\t\"./Binary_Property/White_Space.js\": 485,\n\t\"./Binary_Property/XID_Continue.js\": 486,\n\t\"./Binary_Property/XID_Start.js\": 487,\n\t\"./General_Category/Cased_Letter.js\": 488,\n\t\"./General_Category/Close_Punctuation.js\": 489,\n\t\"./General_Category/Connector_Punctuation.js\": 490,\n\t\"./General_Category/Control.js\": 491,\n\t\"./General_Category/Currency_Symbol.js\": 492,\n\t\"./General_Category/Dash_Punctuation.js\": 493,\n\t\"./General_Category/Decimal_Number.js\": 494,\n\t\"./General_Category/Enclosing_Mark.js\": 495,\n\t\"./General_Category/Final_Punctuation.js\": 496,\n\t\"./General_Category/Format.js\": 497,\n\t\"./General_Category/Initial_Punctuation.js\": 498,\n\t\"./General_Category/Letter.js\": 499,\n\t\"./General_Category/Letter_Number.js\": 500,\n\t\"./General_Category/Line_Separator.js\": 501,\n\t\"./General_Category/Lowercase_Letter.js\": 502,\n\t\"./General_Category/Mark.js\": 503,\n\t\"./General_Category/Math_Symbol.js\": 504,\n\t\"./General_Category/Modifier_Letter.js\": 505,\n\t\"./General_Category/Modifier_Symbol.js\": 506,\n\t\"./General_Category/Nonspacing_Mark.js\": 507,\n\t\"./General_Category/Number.js\": 508,\n\t\"./General_Category/Open_Punctuation.js\": 509,\n\t\"./General_Category/Other.js\": 510,\n\t\"./General_Category/Other_Letter.js\": 511,\n\t\"./General_Category/Other_Number.js\": 512,\n\t\"./General_Category/Other_Punctuation.js\": 513,\n\t\"./General_Category/Other_Symbol.js\": 514,\n\t\"./General_Category/Paragraph_Separator.js\": 515,\n\t\"./General_Category/Private_Use.js\": 516,\n\t\"./General_Category/Punctuation.js\": 517,\n\t\"./General_Category/Separator.js\": 518,\n\t\"./General_Category/Space_Separator.js\": 519,\n\t\"./General_Category/Spacing_Mark.js\": 520,\n\t\"./General_Category/Surrogate.js\": 521,\n\t\"./General_Category/Symbol.js\": 522,\n\t\"./General_Category/Titlecase_Letter.js\": 523,\n\t\"./General_Category/Unassigned.js\": 524,\n\t\"./General_Category/Uppercase_Letter.js\": 525,\n\t\"./Script/Adlam.js\": 526,\n\t\"./Script/Ahom.js\": 527,\n\t\"./Script/Anatolian_Hieroglyphs.js\": 528,\n\t\"./Script/Arabic.js\": 529,\n\t\"./Script/Armenian.js\": 530,\n\t\"./Script/Avestan.js\": 531,\n\t\"./Script/Balinese.js\": 532,\n\t\"./Script/Bamum.js\": 533,\n\t\"./Script/Bassa_Vah.js\": 534,\n\t\"./Script/Batak.js\": 535,\n\t\"./Script/Bengali.js\": 536,\n\t\"./Script/Bhaiksuki.js\": 537,\n\t\"./Script/Bopomofo.js\": 538,\n\t\"./Script/Brahmi.js\": 539,\n\t\"./Script/Braille.js\": 540,\n\t\"./Script/Buginese.js\": 541,\n\t\"./Script/Buhid.js\": 542,\n\t\"./Script/Canadian_Aboriginal.js\": 543,\n\t\"./Script/Carian.js\": 544,\n\t\"./Script/Caucasian_Albanian.js\": 545,\n\t\"./Script/Chakma.js\": 546,\n\t\"./Script/Cham.js\": 547,\n\t\"./Script/Cherokee.js\": 548,\n\t\"./Script/Common.js\": 549,\n\t\"./Script/Coptic.js\": 550,\n\t\"./Script/Cuneiform.js\": 551,\n\t\"./Script/Cypriot.js\": 552,\n\t\"./Script/Cyrillic.js\": 553,\n\t\"./Script/Deseret.js\": 554,\n\t\"./Script/Devanagari.js\": 555,\n\t\"./Script/Dogra.js\": 556,\n\t\"./Script/Duployan.js\": 557,\n\t\"./Script/Egyptian_Hieroglyphs.js\": 558,\n\t\"./Script/Elbasan.js\": 559,\n\t\"./Script/Ethiopic.js\": 560,\n\t\"./Script/Georgian.js\": 561,\n\t\"./Script/Glagolitic.js\": 562,\n\t\"./Script/Gothic.js\": 563,\n\t\"./Script/Grantha.js\": 564,\n\t\"./Script/Greek.js\": 565,\n\t\"./Script/Gujarati.js\": 566,\n\t\"./Script/Gunjala_Gondi.js\": 567,\n\t\"./Script/Gurmukhi.js\": 568,\n\t\"./Script/Han.js\": 569,\n\t\"./Script/Hangul.js\": 570,\n\t\"./Script/Hanifi_Rohingya.js\": 571,\n\t\"./Script/Hanunoo.js\": 572,\n\t\"./Script/Hatran.js\": 573,\n\t\"./Script/Hebrew.js\": 574,\n\t\"./Script/Hiragana.js\": 575,\n\t\"./Script/Imperial_Aramaic.js\": 576,\n\t\"./Script/Inherited.js\": 577,\n\t\"./Script/Inscriptional_Pahlavi.js\": 578,\n\t\"./Script/Inscriptional_Parthian.js\": 579,\n\t\"./Script/Javanese.js\": 580,\n\t\"./Script/Kaithi.js\": 581,\n\t\"./Script/Kannada.js\": 582,\n\t\"./Script/Katakana.js\": 583,\n\t\"./Script/Kayah_Li.js\": 584,\n\t\"./Script/Kharoshthi.js\": 585,\n\t\"./Script/Khmer.js\": 586,\n\t\"./Script/Khojki.js\": 587,\n\t\"./Script/Khudawadi.js\": 588,\n\t\"./Script/Lao.js\": 589,\n\t\"./Script/Latin.js\": 590,\n\t\"./Script/Lepcha.js\": 591,\n\t\"./Script/Limbu.js\": 592,\n\t\"./Script/Linear_A.js\": 593,\n\t\"./Script/Linear_B.js\": 594,\n\t\"./Script/Lisu.js\": 595,\n\t\"./Script/Lycian.js\": 596,\n\t\"./Script/Lydian.js\": 597,\n\t\"./Script/Mahajani.js\": 598,\n\t\"./Script/Makasar.js\": 599,\n\t\"./Script/Malayalam.js\": 600,\n\t\"./Script/Mandaic.js\": 601,\n\t\"./Script/Manichaean.js\": 602,\n\t\"./Script/Marchen.js\": 603,\n\t\"./Script/Masaram_Gondi.js\": 604,\n\t\"./Script/Medefaidrin.js\": 605,\n\t\"./Script/Meetei_Mayek.js\": 606,\n\t\"./Script/Mende_Kikakui.js\": 607,\n\t\"./Script/Meroitic_Cursive.js\": 608,\n\t\"./Script/Meroitic_Hieroglyphs.js\": 609,\n\t\"./Script/Miao.js\": 610,\n\t\"./Script/Modi.js\": 611,\n\t\"./Script/Mongolian.js\": 612,\n\t\"./Script/Mro.js\": 613,\n\t\"./Script/Multani.js\": 614,\n\t\"./Script/Myanmar.js\": 615,\n\t\"./Script/Nabataean.js\": 616,\n\t\"./Script/New_Tai_Lue.js\": 617,\n\t\"./Script/Newa.js\": 618,\n\t\"./Script/Nko.js\": 619,\n\t\"./Script/Nushu.js\": 620,\n\t\"./Script/Ogham.js\": 621,\n\t\"./Script/Ol_Chiki.js\": 622,\n\t\"./Script/Old_Hungarian.js\": 623,\n\t\"./Script/Old_Italic.js\": 624,\n\t\"./Script/Old_North_Arabian.js\": 625,\n\t\"./Script/Old_Permic.js\": 626,\n\t\"./Script/Old_Persian.js\": 627,\n\t\"./Script/Old_Sogdian.js\": 628,\n\t\"./Script/Old_South_Arabian.js\": 629,\n\t\"./Script/Old_Turkic.js\": 630,\n\t\"./Script/Oriya.js\": 631,\n\t\"./Script/Osage.js\": 632,\n\t\"./Script/Osmanya.js\": 633,\n\t\"./Script/Pahawh_Hmong.js\": 634,\n\t\"./Script/Palmyrene.js\": 635,\n\t\"./Script/Pau_Cin_Hau.js\": 636,\n\t\"./Script/Phags_Pa.js\": 637,\n\t\"./Script/Phoenician.js\": 638,\n\t\"./Script/Psalter_Pahlavi.js\": 639,\n\t\"./Script/Rejang.js\": 640,\n\t\"./Script/Runic.js\": 641,\n\t\"./Script/Samaritan.js\": 642,\n\t\"./Script/Saurashtra.js\": 643,\n\t\"./Script/Sharada.js\": 644,\n\t\"./Script/Shavian.js\": 645,\n\t\"./Script/Siddham.js\": 646,\n\t\"./Script/SignWriting.js\": 647,\n\t\"./Script/Sinhala.js\": 648,\n\t\"./Script/Sogdian.js\": 649,\n\t\"./Script/Sora_Sompeng.js\": 650,\n\t\"./Script/Soyombo.js\": 651,\n\t\"./Script/Sundanese.js\": 652,\n\t\"./Script/Syloti_Nagri.js\": 653,\n\t\"./Script/Syriac.js\": 654,\n\t\"./Script/Tagalog.js\": 655,\n\t\"./Script/Tagbanwa.js\": 656,\n\t\"./Script/Tai_Le.js\": 657,\n\t\"./Script/Tai_Tham.js\": 658,\n\t\"./Script/Tai_Viet.js\": 659,\n\t\"./Script/Takri.js\": 660,\n\t\"./Script/Tamil.js\": 661,\n\t\"./Script/Tangut.js\": 662,\n\t\"./Script/Telugu.js\": 663,\n\t\"./Script/Thaana.js\": 664,\n\t\"./Script/Thai.js\": 665,\n\t\"./Script/Tibetan.js\": 666,\n\t\"./Script/Tifinagh.js\": 667,\n\t\"./Script/Tirhuta.js\": 668,\n\t\"./Script/Ugaritic.js\": 669,\n\t\"./Script/Vai.js\": 670,\n\t\"./Script/Warang_Citi.js\": 671,\n\t\"./Script/Yi.js\": 672,\n\t\"./Script/Zanabazar_Square.js\": 673,\n\t\"./Script_Extensions/Adlam.js\": 674,\n\t\"./Script_Extensions/Ahom.js\": 675,\n\t\"./Script_Extensions/Anatolian_Hieroglyphs.js\": 676,\n\t\"./Script_Extensions/Arabic.js\": 677,\n\t\"./Script_Extensions/Armenian.js\": 678,\n\t\"./Script_Extensions/Avestan.js\": 679,\n\t\"./Script_Extensions/Balinese.js\": 680,\n\t\"./Script_Extensions/Bamum.js\": 681,\n\t\"./Script_Extensions/Bassa_Vah.js\": 682,\n\t\"./Script_Extensions/Batak.js\": 683,\n\t\"./Script_Extensions/Bengali.js\": 684,\n\t\"./Script_Extensions/Bhaiksuki.js\": 685,\n\t\"./Script_Extensions/Bopomofo.js\": 686,\n\t\"./Script_Extensions/Brahmi.js\": 687,\n\t\"./Script_Extensions/Braille.js\": 688,\n\t\"./Script_Extensions/Buginese.js\": 689,\n\t\"./Script_Extensions/Buhid.js\": 690,\n\t\"./Script_Extensions/Canadian_Aboriginal.js\": 691,\n\t\"./Script_Extensions/Carian.js\": 692,\n\t\"./Script_Extensions/Caucasian_Albanian.js\": 693,\n\t\"./Script_Extensions/Chakma.js\": 694,\n\t\"./Script_Extensions/Cham.js\": 695,\n\t\"./Script_Extensions/Cherokee.js\": 696,\n\t\"./Script_Extensions/Common.js\": 697,\n\t\"./Script_Extensions/Coptic.js\": 698,\n\t\"./Script_Extensions/Cuneiform.js\": 699,\n\t\"./Script_Extensions/Cypriot.js\": 700,\n\t\"./Script_Extensions/Cyrillic.js\": 701,\n\t\"./Script_Extensions/Deseret.js\": 702,\n\t\"./Script_Extensions/Devanagari.js\": 703,\n\t\"./Script_Extensions/Dogra.js\": 704,\n\t\"./Script_Extensions/Duployan.js\": 705,\n\t\"./Script_Extensions/Egyptian_Hieroglyphs.js\": 706,\n\t\"./Script_Extensions/Elbasan.js\": 707,\n\t\"./Script_Extensions/Ethiopic.js\": 708,\n\t\"./Script_Extensions/Georgian.js\": 709,\n\t\"./Script_Extensions/Glagolitic.js\": 710,\n\t\"./Script_Extensions/Gothic.js\": 711,\n\t\"./Script_Extensions/Grantha.js\": 712,\n\t\"./Script_Extensions/Greek.js\": 713,\n\t\"./Script_Extensions/Gujarati.js\": 714,\n\t\"./Script_Extensions/Gunjala_Gondi.js\": 715,\n\t\"./Script_Extensions/Gurmukhi.js\": 716,\n\t\"./Script_Extensions/Han.js\": 717,\n\t\"./Script_Extensions/Hangul.js\": 718,\n\t\"./Script_Extensions/Hanifi_Rohingya.js\": 719,\n\t\"./Script_Extensions/Hanunoo.js\": 720,\n\t\"./Script_Extensions/Hatran.js\": 721,\n\t\"./Script_Extensions/Hebrew.js\": 722,\n\t\"./Script_Extensions/Hiragana.js\": 723,\n\t\"./Script_Extensions/Imperial_Aramaic.js\": 724,\n\t\"./Script_Extensions/Inherited.js\": 725,\n\t\"./Script_Extensions/Inscriptional_Pahlavi.js\": 726,\n\t\"./Script_Extensions/Inscriptional_Parthian.js\": 727,\n\t\"./Script_Extensions/Javanese.js\": 728,\n\t\"./Script_Extensions/Kaithi.js\": 729,\n\t\"./Script_Extensions/Kannada.js\": 730,\n\t\"./Script_Extensions/Katakana.js\": 731,\n\t\"./Script_Extensions/Kayah_Li.js\": 732,\n\t\"./Script_Extensions/Kharoshthi.js\": 733,\n\t\"./Script_Extensions/Khmer.js\": 734,\n\t\"./Script_Extensions/Khojki.js\": 735,\n\t\"./Script_Extensions/Khudawadi.js\": 736,\n\t\"./Script_Extensions/Lao.js\": 737,\n\t\"./Script_Extensions/Latin.js\": 738,\n\t\"./Script_Extensions/Lepcha.js\": 739,\n\t\"./Script_Extensions/Limbu.js\": 740,\n\t\"./Script_Extensions/Linear_A.js\": 741,\n\t\"./Script_Extensions/Linear_B.js\": 742,\n\t\"./Script_Extensions/Lisu.js\": 743,\n\t\"./Script_Extensions/Lycian.js\": 744,\n\t\"./Script_Extensions/Lydian.js\": 745,\n\t\"./Script_Extensions/Mahajani.js\": 746,\n\t\"./Script_Extensions/Makasar.js\": 747,\n\t\"./Script_Extensions/Malayalam.js\": 748,\n\t\"./Script_Extensions/Mandaic.js\": 749,\n\t\"./Script_Extensions/Manichaean.js\": 750,\n\t\"./Script_Extensions/Marchen.js\": 751,\n\t\"./Script_Extensions/Masaram_Gondi.js\": 752,\n\t\"./Script_Extensions/Medefaidrin.js\": 753,\n\t\"./Script_Extensions/Meetei_Mayek.js\": 754,\n\t\"./Script_Extensions/Mende_Kikakui.js\": 755,\n\t\"./Script_Extensions/Meroitic_Cursive.js\": 756,\n\t\"./Script_Extensions/Meroitic_Hieroglyphs.js\": 757,\n\t\"./Script_Extensions/Miao.js\": 758,\n\t\"./Script_Extensions/Modi.js\": 759,\n\t\"./Script_Extensions/Mongolian.js\": 760,\n\t\"./Script_Extensions/Mro.js\": 761,\n\t\"./Script_Extensions/Multani.js\": 762,\n\t\"./Script_Extensions/Myanmar.js\": 763,\n\t\"./Script_Extensions/Nabataean.js\": 764,\n\t\"./Script_Extensions/New_Tai_Lue.js\": 765,\n\t\"./Script_Extensions/Newa.js\": 766,\n\t\"./Script_Extensions/Nko.js\": 767,\n\t\"./Script_Extensions/Nushu.js\": 768,\n\t\"./Script_Extensions/Ogham.js\": 769,\n\t\"./Script_Extensions/Ol_Chiki.js\": 770,\n\t\"./Script_Extensions/Old_Hungarian.js\": 771,\n\t\"./Script_Extensions/Old_Italic.js\": 772,\n\t\"./Script_Extensions/Old_North_Arabian.js\": 773,\n\t\"./Script_Extensions/Old_Permic.js\": 774,\n\t\"./Script_Extensions/Old_Persian.js\": 775,\n\t\"./Script_Extensions/Old_Sogdian.js\": 776,\n\t\"./Script_Extensions/Old_South_Arabian.js\": 777,\n\t\"./Script_Extensions/Old_Turkic.js\": 778,\n\t\"./Script_Extensions/Oriya.js\": 779,\n\t\"./Script_Extensions/Osage.js\": 780,\n\t\"./Script_Extensions/Osmanya.js\": 781,\n\t\"./Script_Extensions/Pahawh_Hmong.js\": 782,\n\t\"./Script_Extensions/Palmyrene.js\": 783,\n\t\"./Script_Extensions/Pau_Cin_Hau.js\": 784,\n\t\"./Script_Extensions/Phags_Pa.js\": 785,\n\t\"./Script_Extensions/Phoenician.js\": 786,\n\t\"./Script_Extensions/Psalter_Pahlavi.js\": 787,\n\t\"./Script_Extensions/Rejang.js\": 788,\n\t\"./Script_Extensions/Runic.js\": 789,\n\t\"./Script_Extensions/Samaritan.js\": 790,\n\t\"./Script_Extensions/Saurashtra.js\": 791,\n\t\"./Script_Extensions/Sharada.js\": 792,\n\t\"./Script_Extensions/Shavian.js\": 793,\n\t\"./Script_Extensions/Siddham.js\": 794,\n\t\"./Script_Extensions/SignWriting.js\": 795,\n\t\"./Script_Extensions/Sinhala.js\": 796,\n\t\"./Script_Extensions/Sogdian.js\": 797,\n\t\"./Script_Extensions/Sora_Sompeng.js\": 798,\n\t\"./Script_Extensions/Soyombo.js\": 799,\n\t\"./Script_Extensions/Sundanese.js\": 800,\n\t\"./Script_Extensions/Syloti_Nagri.js\": 801,\n\t\"./Script_Extensions/Syriac.js\": 802,\n\t\"./Script_Extensions/Tagalog.js\": 803,\n\t\"./Script_Extensions/Tagbanwa.js\": 804,\n\t\"./Script_Extensions/Tai_Le.js\": 805,\n\t\"./Script_Extensions/Tai_Tham.js\": 806,\n\t\"./Script_Extensions/Tai_Viet.js\": 807,\n\t\"./Script_Extensions/Takri.js\": 808,\n\t\"./Script_Extensions/Tamil.js\": 809,\n\t\"./Script_Extensions/Tangut.js\": 810,\n\t\"./Script_Extensions/Telugu.js\": 811,\n\t\"./Script_Extensions/Thaana.js\": 812,\n\t\"./Script_Extensions/Thai.js\": 813,\n\t\"./Script_Extensions/Tibetan.js\": 814,\n\t\"./Script_Extensions/Tifinagh.js\": 815,\n\t\"./Script_Extensions/Tirhuta.js\": 816,\n\t\"./Script_Extensions/Ugaritic.js\": 817,\n\t\"./Script_Extensions/Vai.js\": 818,\n\t\"./Script_Extensions/Warang_Citi.js\": 819,\n\t\"./Script_Extensions/Yi.js\": 820,\n\t\"./Script_Extensions/Zanabazar_Square.js\": 821,\n\t\"./index.js\": 822,\n\t\"./unicode-version.js\": 823\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 434;","import React from \"react\";\nimport createTheme from \"spectacle/lib/themes/default\";\nimport {\n  Appear,\n  CodePane,\n  Deck,\n  Heading,\n  List,\n  ListItem,\n  Notes,\n  S,\n  Slide,\n  Table,\n  TableBody,\n  TableHeader,\n  TableHeaderItem,\n  TableItem,\n  TableRow,\n  Text\n} from \"spectacle\";\nimport \"./index.css\";\nrequire(\"normalize.css\");\n\nconst theme = createTheme(\n  {\n    primary: \"white\",\n    secondary: \"#1F2022\",\n    tertiary: \"#03A9FC\",\n    quartenary: \"#CECECE\"\n  },\n  {\n    primary: \"Montserrat\",\n    secondary: \"Helvetica\"\n  }\n);\nconst H1 = props => (\n  <Heading size={5} caps margin=\"0 0 2rem\" textColor=\"primary\" {...props} />\n);\nconst H2 = props => (\n  <Heading size={6} margin=\"0 0 5rem\" textColor=\"primary\" {...props} />\n);\n\n/*\n\nStructure:\n\n* what is mocking (by most definitions)\n** first introduce assertions (pretty much the most important test helpers)\n** show stubbing example\n** mocking extends stubbing by special assertions\n** show extension mocking example\n* typical usage of mocking libraries\n** explain components such as expects, withArgs\n** why can we not use the ordinary method call syntax of our language?\n\n* Spock Framework introduces a different look and feel for all those aspects of testing\n** show assertion blocks -> pretty cool but not a huge win\n** show stubbing\n** show mocking\n** show combination\n\n* what exactly did we implement for this paper?\n** spockjs already existed with assertion blocks (show example without further explanation)\n** we will add \"interaction blocks\"\n** show and explain examples\n\n* how did we do this?\n** let's first take a look at how the simpler assertion block transform works\n** do this without showing code, just explaining the algorithms\n** show comparison between input and output code\n** explain transform using AST\n\n* now for interaction blocks\n** explain input code structure (Fig. 13)\n** explain input AST structure (Fig. 14)\n** we parse this into a tagged union type (show using a simple function ADT syntax)\n** explain parsing\n** do not forget: there is also verification!\n\n* but now what is the output code?\n** this is where the \"abstraction of JS mocking libraries\" from the title comes in\n** user should be able to use this with their favorite mocking library. why?\n** multiple reasons outlined in the paper, but mostly because\n*** should be usable along with direct usage of the library and its distinct features\n*** improved adoptability\n**** no need for anyone to switch mocking library in order to use spockjs\n**** no custom mocking library like in original Spock means we can provide spockjs escape hatch\n***** explain escape hatch quickly\n\n* how to be library-agnostic?\n** direct compilation\n*** example output code\n** runtime dispatch\n*** example output code\n*** and then we dispatch to the actual library in our adapter implementation\n\n* do not want to (or have time to) get into implementation details\n** we implemented both of those strategies\n** and provided support for the mocking libraries of Sinon.JS and Jest\n\n* direct compilation does have some advantages:\n** conceptually more straightforward, as in no extra layer of abstraction\n** can support the escape hatch\n*** albeit crappy, because the code generated can be really ugly as we will see\n** with full access to the AST we can generate useful error messages w/ original code snippet etc\n\n* however, it also has some major issues compared to runtime dispatch:\n** generating code like a human would write it sound nice, but in pratice some libraries do not provide adequate functions for spockjs mocking directly\n*** so we have to implement a sort of runtime that remembers invocations\n    and compares them to interaction declarations\n*** this runtime is generated in huge code string template (show) without type checking or anything\n*** this requires so much effort that it severely impedes our ability to easily support many libraries\n*** runtime dispatch has this code as ordinary modules executed at runtime, avoiding problems\n\n* fundamentally, this is a problem of information loss (perhaps some sort of graph for visualization)\n** during the transition from compile time to runtime, a lot of information from the AST is lost\n*** at compile time,\n**** we have access to everything and can implement any conceivable functionality\n**** but using it is annoying because it's all just AST transformation and code generation\n*** at runtime,\n**** we have access only to exactly to the information we serialized in our compile step\n**** but we can use it very easily\n** through serialization at compile time, we have control over how much information is lost\n** but every extra piece of information comes with extra implementation effort\n** overall advice:\n*** if a use case needs a lot of detail about the original code,\n**** avoid having to serialize all of that by doing the work immediately at compile time\n*** if a use case has just a few pieces of information to be extracted from the original code\n    like the interaction declaration data from spockjs\n**** serialize that data at compile time and save the complex logic of processing that data for runtime\n*** or in some cases, one might consider a hybrid approach mentioned in the paper\n**** where runtime dispatch is just a special case of direct compilation\n\n*/\n\nexport default class Presentation extends React.Component {\n  renderIntroOutro(notes) {\n    return (\n      <Slide bgColor=\"secondary\">\n        <Heading size={6} caps textColor=\"primary\">\n          Compile-time abstraction of JavaScript mocking libraries powering a\n          domain-specific language for interaction testing\n        </Heading>\n        <Text margin=\"2rem 0 0\" textSize=\"2.5rem\" textColor=\"primary\">\n          Tim Seckinger\n        </Text>\n        <Text margin=\"0.5rem 0 0\" textSize=\"2rem\" textColor=\"primary\">\n          <img src=\"github-logo.png\" alt=\"Github Logo\" className=\"inline\" />{\" \"}\n          jeysal\n        </Text>\n        {notes}\n      </Slide>\n    );\n  }\n\n  render() {\n    return (\n      <Deck transition={[\"slide\"]} transitionDuration={500} theme={theme}>\n        {this.renderIntroOutro(\n          <Notes>\n            <p>Introduce speaker & topic</p>\n            <p>\n              That's a lot of words in the title - we'll do this step by step.\n            </p>\n            <p>What is mocking?</p>\n          </Notes>\n        )}\n        <Slide>\n          <H1 textColor=\"secondary\">Test helpers</H1>\n          <Notes>\n            <p>\n              To understand mocking, let's first look at some other, more basic\n              helpers used in automated software testing.\n            </p>\n          </Notes>\n        </Slide>\n        <Slide bgColor=\"secondary\">\n          <H1>Test helpers</H1>\n          <H2>Assertions</H2>\n          <CodePane\n            textSize=\"3rem\"\n            lang=\"js\"\n            source={`expect(1).to.equal(1);\nassert(1 === 1);`}\n          />\n          <Appear>\n            <div>\n              <CodePane\n                textSize=\"1.5rem\"\n                lang=\"js\"\n                source=\"expect([1, 2]).to.be.an('array').that.does.not.include(3);\"\n              />\n            </div>\n          </Appear>\n          <Notes>\n            <p>\n              Assertions encode what is called the test oracle in literature.\n            </p>\n            <p>Explain</p>\n            <p>click</p>\n          </Notes>\n        </Slide>\n        <Slide bgColor=\"secondary\">\n          <H1>Test helpers</H1>\n          <H2>Stubs</H2>\n          <CodePane\n            textSize=\"1.5rem\"\n            lang=\"js\"\n            source={`const subtract = add => (a, b) => add(a, -b);\n\nconst addStub = (a, b) => (a === 3 && b === -2 ? 1 : 0);\n\nassert(subtract(addStub)(3, 2) === 1);`}\n          />\n          <Notes>\n            <p>Stubs replace components that the test subject depends on.</p>\n            <p>\n              A stub returns a predefined value when the test subject calls it.\n            </p>\n            <p>Contrived example: subtract is SUT, add is dependency</p>\n            <p>Explain SUT implementation</p>\n            <p>\n              To test `subtract`, we pass it our `addStub` as its `add`\n              dependency and call it with 3, 2.\n            </p>\n            <p>\n              `addStub` will be called with 3, -2 and knows to return 1 for\n              those exact parameters, despite not being a full implementation of\n              `add`.\n            </p>\n          </Notes>\n        </Slide>\n        <Slide bgColor=\"secondary\">\n          <H1>Test helpers</H1>\n          <H2>Mocks</H2>\n          <CodePane\n            textSize=\"1.5rem\"\n            lang=\"js\"\n            source={`const subtract = add => (a, b) => add(a, -b);\n\nconst addCalls = [];\nconst addMock = (a, b) => (\n  addCalls.push({ a, b }), a === 3 && b === -2 ? 1 : 0\n);\n\nassert(subtract(addMock)(3, 2) === 1);\nassert.deepStrictEqual(addCalls, [{ a: 3, b: -2 }]);`}\n          />\n          <Notes>\n            <p>Mocking extends stubbing by special assertions.</p>\n            <p>We assert that the mock function is called in a certain way.</p>\n            <p>Explain example</p>\n            <p>Show boilerplate</p>\n          </Notes>\n        </Slide>\n        <Slide bgColor=\"secondary\">\n          <H1>Test helpers</H1>\n          <H2>Mocking libraries</H2>\n          <CodePane\n            textSize=\"1.5rem\"\n            lang=\"js\"\n            source={`const myMock = mock(myApi).expects(\"method\")\n                          .withArgs(42, 1337);\n\nmyApi.method(42, 1337);\n\nmyMock.verify();`}\n          />\n          <Notes>\n            <p>Explain (particularly expects & withArgs)</p>\n            <p>\n              Declaration is unintuitive - why can we not use the ordinary\n              method call syntax of our language?\n            </p>\n          </Notes>\n        </Slide>\n        <Slide>\n          <H1 textColor=\"secondary\">The Spock Framework</H1>\n          <Notes>\n            <p>\n              Look towards other tools out there - Spock Framework for the\n              Apache Groovy Language\n            </p>\n            <p>\n              Introduces a completely different look and feel for all the\n              aspects of testing mentioned.\n            </p>\n          </Notes>\n        </Slide>\n        <Slide bgColor=\"secondary\">\n          <H1>The Spock Framework</H1>\n          <H2>Assertions</H2>\n          <CodePane\n            textSize=\"3rem\"\n            lang=\"js\"\n            source={`expect:\n1 + 2 == 3`}\n          />\n          <Notes>\n            <p>\n              Explain `expect` block - evaluates the expression to check whether\n              it is truthy.\n            </p>\n            <p>\n              Obviously this is not something a runtime library can do, this\n              requires some sort of custom compilation.\n            </p>\n            <p>Pretty cool but not a huge win...</p>\n          </Notes>\n        </Slide>\n        <Slide bgColor=\"secondary\">\n          <H1>The Spock Framework</H1>\n          <H2>Stubs</H2>\n          <CodePane\n            textSize=\"2rem\"\n            lang=\"js\"\n            source={`setup:\nsubscriber.receive(\"msg\") >> true\n\nexpect:\npublisher.publish(\"msg\") == true`}\n          />\n          <Notes>\n            <p>Explain</p>\n          </Notes>\n        </Slide>\n        <Slide bgColor=\"secondary\">\n          <H1>The Spock Framework</H1>\n          <H2>Mocks</H2>\n          <CodePane\n            textSize=\"2rem\"\n            lang=\"js\"\n            source={`when:\npublisher.publish(\"msg\")\n\nthen:\n1 * subscriber.receive(\"msg\")`}\n          />\n          <Notes>\n            <p>Explain</p>\n          </Notes>\n        </Slide>\n        <Slide bgColor=\"secondary\">\n          <H1>The Spock Framework</H1>\n          <H2>Combined</H2>\n          <CodePane\n            textSize=\"2rem\"\n            lang=\"js\"\n            source={`when:\ndef res = publisher.publish(\"msg\")\n\nthen:\n1 * subscriber.receive(\"msg\") >> true\nres == true`}\n          />\n          <Notes>\n            <p>Explain</p>\n          </Notes>\n        </Slide>\n        <Slide>\n          <H1 textColor=\"secondary\">spockjs</H1>\n          <Notes>\n            <p>What exactly did I build in the thesis?</p>\n            <p>\n              spockjs is a tool that already implements some of the capabilities\n              of the Spock Framework for the JavaScript ecosystem.\n            </p>\n          </Notes>\n        </Slide>\n        <Slide bgColor=\"secondary\">\n          <H1>spockjs</H1>\n          <H2>Assertion blocks</H2>\n          <CodePane\n            textSize=\"2rem\"\n            lang=\"js\"\n            source={`expect: 'a' + 'b' === 'ab';\n\nexpect: {\n  'a' + 'b' === 'ab';\n  1 < 2;\n}`}\n          />\n          <Notes>\n            <p>This is what spockjs can do so far</p>\n            <p>Look mostly similar to assertions in the Spock Framework.</p>\n            <p>Explain</p>\n            <p>\n              For the thesis, I added support for so-called 'interaction blocks'\n              to spockjs\n            </p>\n          </Notes>\n        </Slide>\n        <Slide bgColor=\"secondary\">\n          <H1>spockjs</H1>\n          <H2>Interaction blocks</H2>\n          <CodePane\n            textSize=\"2rem\"\n            lang=\"js\"\n            source={`mock: 1 * receive('msg') >> true;\n\nexpect: publish('msg') === true;\n\nverify: receive;`}\n          />\n          <Notes>\n            <p>Explain</p>\n            <p>\n              To see how we could implement interaction blocks, let's first look\n              at how assertion blocks are implemented.\n            </p>\n          </Notes>\n        </Slide>\n        <Slide bgColor=\"secondary\">\n          <H1>Assertion block implementation</H1>\n          <H2>Code</H2>\n          <CodePane\n            textSize=\"3rem\"\n            lang=\"js\"\n            source={`expect: true;\n// ==>\nexpect: assert(true);`}\n          />\n          <Notes>\n            <p>The code transformation for assertion blocks is quite simple.</p>\n            <p>Not gonna show the code implementing the transform</p>\n            <p>Explain</p>\n            <p>\n              There's a few more aspects to this, such as importing this assert\n              function from somewhere, but the relevant bit is just the\n              transformation.\n            </p>\n          </Notes>\n        </Slide>\n        <Slide>\n          <H1 textColor=\"secondary\">Assertion block implementation</H1>\n          <H2 textColor=\"secondary\" margin=\"0 0 2rem\">\n            Input and <span style={{ color: \"teal\" }}>output</span> AST\n          </H2>\n          <img\n            src=\"assertion-block-ast.png\"\n            alt=\"Assertion block AST\"\n            style={{ height: \"30rem\" }}\n          />\n          <Notes>\n            <p>Explain base structure</p>\n            <p>Explain CallExpression insertion</p>\n          </Notes>\n        </Slide>\n        <Slide bgColor=\"secondary\">\n          <H1>Interaction block parsing</H1>\n          <H2>Input code</H2>\n          <div style={{ color: \"teal\" }}>MockInteractionDeclaration:</div>\n          <CodePane textSize=\"2rem\" lang=\"js\" source={`cardinality * call;`} />\n          <br />\n          <div style={{ color: \"magenta\" }}>StubInteractionDeclaration:</div>\n          <CodePane textSize=\"2rem\" lang=\"js\" source={`call >> returnValue;`} />\n          <br />\n          <div style={{ color: \"violet\" }}>CombinedInteractionDeclaration:</div>\n          <CodePane\n            textSize=\"2rem\"\n            lang=\"js\"\n            source={`cardinality * call >> returnValue;`}\n          />\n          <Notes>\n            <p>Now for interaction blocks</p>\n            <p>\n              There's the interaction verification block, but that's rather\n              simple\n            </p>\n            <p>Interaction declaration blocks are the interesting part</p>\n            <p>Already showed an example interaction declaration</p>\n            <p>\n              This is the structure of the three different kinds of interaction\n              declarations\n            </p>\n            <p>Explain</p>\n          </Notes>\n        </Slide>\n        <Slide>\n          <H1 textColor=\"secondary\">Interaction block parsing</H1>\n          <H2 textColor=\"secondary\" margin=\"0 0 2rem\">\n            Input AST\n          </H2>\n          <img\n            src=\"interaction-block-ast.png\"\n            alt=\"Interaction block AST\"\n            style={{ height: \"30rem\" }}\n          />\n          <Notes>\n            <p>Explain</p>\n            <p>Explain CallExpression</p>\n            <p>We're interested in the leafs</p>\n            <p>Explain Parsing</p>\n          </Notes>\n        </Slide>\n        <Slide bgColor=\"secondary\">\n          <H1>Interaction block parsing</H1>\n          <H2 margin=\"0 0 2rem\">Tagged union InteractionDeclaration</H2>\n          <CodePane\n            textSize=\"1.2rem\"\n            lang=\"rust\"\n            source={`enum InteractionDeclaration {\n  Mock {\n    mockObject: Expression,\n    args: [Expression],\n    cardinality: Expression,\n  },\n  Stub {\n    mockObject: Expression,\n    args: [Expression],\n    returnValue: Expression,\n  },\n  Combined {\n    mockObject: Expression,\n    args: [Expression],\n    cardinality: Expression,\n    returnValue: Expression,\n  },\n}`}\n          />\n          <Notes>\n            <p>This is the data structure the parser generates</p>\n            <p>\n              Explain - interaction declaration is either mock or stub or\n              combined...\n            </p>\n            <p>\n              But now what is the output code we generate for interaction\n              declarations?\n            </p>\n          </Notes>\n        </Slide>\n        <Slide bgColor=\"secondary\" textColor=\"primary\">\n          <H1>Mocking library abstraction</H1>\n          <H2>Reasons</H2>\n          <List>\n            <ListItem textSize=\"2rem\">\n              simultaneously use the mocking library directly\n            </ListItem>\n            <ListItem textSize=\"2rem\">\n              no need for anyone to switch their mocking library\n            </ListItem>\n            <ListItem textSize=\"2rem\">\n              possible escape route to stop using spockjs\n            </ListItem>\n          </List>\n          <Notes>\n            <p>\n              This is where the \"abstraction of JS mocking libraries\" from the\n              title comes in.\n            </p>\n            <p>\n              Users should be able to use spockjs with their favorite mocking\n              library.\n            </p>\n            <p>Why?</p>\n            <p>\n              Distinct features of the mocking library only available with\n              direct usage, so that should be available alongside use through\n              spockjs.\n            </p>\n            <p>\n              Better adoptability: No time-consuming library switch required to\n              introduce spockjs.\n            </p>\n            <p>Explain escape hatch</p>\n          </Notes>\n        </Slide>\n        <Slide bgColor=\"secondary\" textColor=\"primary\">\n          <H1>Mocking library abstraction</H1>\n          <H2>Options</H2>\n          <List>\n            <ListItem>Direct compilation</ListItem>\n            <ListItem>Runtime dispatch</ListItem>\n          </List>\n          <Notes>\n            <p>\n              There are two options to achieve support for multiple mocking\n              libraries.\n            </p>\n            <p>\n              I implemented both of those strategies for the thesis and used\n              them to provide support for the Sinon.JS and Jest mocking\n              libraries.\n            </p>\n            <p>\n              No time to get into the implementation details, but I'll give a\n              brief overview.\n            </p>\n          </Notes>\n        </Slide>\n        <Slide bgColor=\"secondary\">\n          <H1>Mocking library abstraction</H1>\n          <H2>Direct compilation</H2>\n          <CodePane\n            textSize=\"2rem\"\n            lang=\"js\"\n            source={`mock: 1 * fn();\nverify: fn;\n// ==>\nexpect(fn).withoutArgs().times(1);\nverify(fn);`}\n          />\n          <Notes>\n            <p>Input and output code for a fictional mocking library</p>\n            <p>Compiler plugin knows the API of the mocking library in use.</p>\n            <p>\n              Explain: Generates calls to the mocking library the same way a\n              human would write them.\n            </p>\n          </Notes>\n        </Slide>\n        <Slide bgColor=\"secondary\">\n          <H1>Mocking library abstraction</H1>\n          <H2 margin=\"0 0 2rem\">Runtime dispatch</H2>\n          <CodePane\n            textSize=\"2rem\"\n            lang=\"js\"\n            source={`mock: 1 * fn();\nverify: fn;\n// ==>\ninteractionRuntimeAdapter.declare({\n  kind: 'mock',\n  mockObject: fn,\n  args: [],\n  cardinality: 1,\n});\ninteractionRuntimeAdapter.verify(mock)`}\n          />\n          <Notes>\n            <p>\n              Generated code looks the same regardless of mocking library in\n              use.\n            </p>\n            <p>\n              Only the interaction runtime adapter implementation is swapped out\n              by importing it from a different module.\n            </p>\n            <p>\n              The adapter receives the serialized interaction declaration as its\n              argument and then knows how to convert that into calls to the\n              mocking library and makes those calls internally at runtime.\n            </p>\n          </Notes>\n        </Slide>\n        <Slide bgColor=\"secondary\">\n          <H1>Mocking library abstraction</H1>\n          <H2>Direct compilation upsides</H2>\n          <Notes>\n            <p>\n              Direct compilation is conceptually quite straightforward / no\n              extra layer of abstraction / just a more complex version of\n              assertion blocks\n            </p>\n            <p>\n              Can also support the aforementioned escape hatch, although this\n              can get a bit ugly, as we will see.\n            </p>\n            <p>\n              When generating the code we have full access to the AST that we\n              can use e.g. to generate useful error messages w/ original code\n              snippets.\n            </p>\n          </Notes>\n        </Slide>\n        <Slide bgColor=\"secondary\">\n          <H1>Mocking library abstraction</H1>\n          <H2>Direct compilation problem</H2>\n          <Appear>\n            <div>\n              <CodePane\n                textSize=\"1rem\"\n                lang=\"js\"\n                source={`const verify = template(\\`\n  // sanity check ...\n  (MOCK[\\${symbol}] || [])\n    .filter(({ cardinality }) => cardinality != null)\n    .forEach(({ args: expected, cardinality: expectedTimes }) => {\n      const __spockjs_actualTimes = MOCK.mock.calls.filter(actual =>\n        \\${deepStrictEqual}([...actual], [...expected]),\n      ).length;\n      if (__spockjs_actualTimes !== expectedTimes) {\n        const __spockjs_args = \\${prettyFormat}(expected);\n        throw new Error(\n          \\\\\\`Expected \\\\\\${expectedTimes} call(s) to mock '\\\\\\${MOCK_NAME}' \\\\\\` +\n            \\\\\\`with arguments \\\\\\${__spockjs_args}, \\\\\\` +\n            \\\\\\`but received \\\\\\${__spockjs_actualTimes} such call(s).\\\\\\`,\n        );\n      }\n    });\n\\`);`}\n              />\n            </div>\n          </Appear>\n          <Notes>\n            <p>\n              Problem is: Generating code like a human would write it sounds\n              nice, but in practice some libraries do not provide adequate\n              functions for spockjs mocking.\n            </p>\n            <p>\n              For such libraries, we have to implement a sort of runtime that\n              remembers invocations and compares them to the declarations when\n              verifying.\n              <p>\n                Runtime is generated in huge code string template without type\n                checking or any tooling support at all (click).\n              </p>\n              <p>\n                A lot of effort - impedes our ability to easily support many\n                libraries.\n              </p>\n              <p>\n                Runtime dispatch has this code as ordinary modules in the\n                adapter executed at runtime.\n              </p>\n            </p>\n          </Notes>\n        </Slide>\n        <Slide bgColor=\"secondary\" textColor=\"primary\">\n          <H1>Information loss</H1>\n          <H2>Tradeoff</H2>\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHeaderItem>\n                  <S type=\"bold\">Work timing</S>\n                </TableHeaderItem>\n                <TableHeaderItem>\n                  <S type=\"bold\">Power</S>\n                </TableHeaderItem>\n                <TableHeaderItem>\n                  <S type=\"bold\">Ease</S>\n                </TableHeaderItem>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              <TableRow>\n                <TableItem>compile time</TableItem>\n                <TableItem>\n                  <span style={{ color: \"green\" }}>high</span>\n                </TableItem>\n                <TableItem>\n                  <span style={{ color: \"red\" }}>low</span>\n                </TableItem>\n              </TableRow>\n              <TableRow>\n                <TableItem>runtime</TableItem>\n                <TableItem>\n                  <span style={{ color: \"red\" }}>low</span>\n                </TableItem>\n                <TableItem>\n                  <span style={{ color: \"green\" }}>high</span>\n                </TableItem>\n              </TableRow>\n            </TableBody>\n          </Table>\n          <Notes>\n            <p>\n              Fundamentally, this is a problem of information loss. During the\n              transition from compile time to runtime, a lot of information from\n              the AST is lost.\n            </p>\n            <p>\n              Compile time: access to everything, can implement any conceivable\n              functionality - but using the information is annoying because it's\n              all AST transformation and code generation.\n            </p>\n            <p>\n              Runtime: We have access to exactly the information we serialized\n              in our compile step - but we can use it very easily.\n            </p>\n            <p>\n              Through that serialization, we can control how much information is\n              lost, but every extra piece of information preserved comes with\n              more implementation effort.\n            </p>\n          </Notes>\n        </Slide>\n        <Slide bgColor=\"secondary\" textColor=\"primary\">\n          <H1>Information loss</H1>\n          <H2>Advice</H2>\n          <p>\n            Do work at{\" \"}\n            <S type=\"italic\" textColor=\"tertiary\">\n              compile time\n            </S>{\" \"}\n            if a lot of detail about the original code is required.\n          </p>\n          <p>\n            Do work at{\" \"}\n            <S type=\"italic\" textColor=\"tertiary\">\n              runtime\n            </S>{\" \"}\n            if only a few select pieces of information need to be extracted.\n          </p>\n          <Notes>\n            <p>As a rule of thumb for applications like spockjs:</p>\n            <p>\n              If a lot of detail required, avoid having to serialize all of that\n              by doing the work immediately at compile time.\n            </p>\n            <p>\n              If just a few select pieces required (like in spockjs), serialize\n              that data at compile time and save the complex logic of processing\n              that data for runtime.\n            </p>\n            <p>\n              In special cases, one might consider a hybrid approach where\n              runtime dispatch is just a special case of direct compilation,\n              which is also mentioned in the paper.\n            </p>\n          </Notes>\n        </Slide>\n        {this.renderIntroOutro()}\n      </Deck>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Presentation from './presentation';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<Presentation />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}